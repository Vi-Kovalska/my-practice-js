import{a as c,i as a}from"./assets/vendor-Cbhu4xvy.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function o(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=o(n);fetch(n.href,r)}})();c({method:"get",url:"https://jsonplaceholder.typicode.com/users"}).then(e=>console.log(e)).catch(e=>console.log(e));c.get("https://jsonplaceholder.typicode.com/users").then(e=>console.log(e)).catch(e=>console.log(e));c.get("https://jsonplaceholder.typicode.com/users").then(e=>{console.log(e.data),console.log(e.status),console.log(e.statusText),console.log(e.headers),console.log(e.config)}).catch(e=>{console.log(e)});c.defaults.baseURL="https://jsonplaceholder.typicode.com";const S="secret-api-key-for-every-request";c.defaults.headers.common["header-name"]=S;c.get("https://jsonplaceholder.typicode.com/users",{params:{_limit:7,_sort:"name"}});const T=async()=>{const e=await c.get("https://jsonplaceholder.typicode.com/users");return console.log(e.data),e.data};T().then(e=>console.log(e));const k=async()=>(await c.get("https://jsonplaceholder.typicode.com/users")).data;k().then(e=>console.log(e)).catch(e=>console.log(e));const P=async()=>(await c.get("https://jsonplaceholder.typicode.com/users")).data,I=async()=>{try{const e=await P();console.log(e)}catch(e){console.log(e)}};I();const p=document.querySelector(".btn-pagination"),f=document.querySelector(".posts");let u=1,w=10;p.addEventListener("click",async()=>{try{const e=await O();E(e),u+=1,u>1&&(p.textContent="Fetch more posts")}catch(e){console.log(e)}});async function O(){const e=new URLSearchParams({_limit:w,_page:u});return(await c.get(`https://jsonplaceholder.typicode.com/posts?${e}`)).data}function E(e){const t=e.map(({id:o,title:s,body:n,userId:r})=>`<li>
          <h2 class="post-title">${s.slice(0,30)}</h2>
          <p><b>Post id</b>: ${o}</p>
          <p><b>Author id</b>: ${r}</p>
          <p class="post-body">${n}</p>
        </li>`).join("");f.insertAdjacentHTML("beforeend",t)}let l=1,y=40;const N=Math.ceil(100/y);p.addEventListener("click",async()=>{if(l>N)return a.error({position:"topRight",message:"We're sorry, there are no more posts to load"});try{const e=await R();C(e),l+=1,l>1&&(p.textContent="Fetch more posts")}catch(e){console.log(e)}});async function R(){const e=new URLSearchParams({_limit:y,_page:l});return(await c.get(`https://jsonplaceholder.typicode.com/posts?${e}`)).data}function C(e){const t=e.map(({id:o,title:s,body:n,userId:r})=>`<li>
          <h2 class="post-title">${s.slice(0,30)}</h2>
          <p><b>Post id</b>: ${o}</p>
          <p><b>Author id</b>: ${r}</p>
          <p class="post-body">${n}</p>
        </li>`).join("");f.insertAdjacentHTML("beforeend",t)}const d="https://jsonplaceholder.typicode.com";async function A(){const e=await c(`${d}/users/1/todos`),t=await c(`${d}/users/2/todos`),o=await c(`${d}/users/3/todos`);return[e,t,o]}A().then(e=>console.log(e)).catch(e=>console.log(e));async function J(){const t=[1,2,3].map(async s=>{const n=await c(`${d}/users/${s}/todos`);return console.log(n.data),n.data}),o=await Promise.all(t);return console.log(o),o}J().then(e=>{const[t,o,s]=e;console.log(t)}).catch(e=>console.log(e));const b=document.querySelector(".todoForm"),h=document.querySelector(".todoList");b.addEventListener("click",D);function D(e){e.target.nodeName==="BUTTON"&&fetch("https://dummyjson.com/todos/random").then(t=>t.json()).then(t=>h.insertAdjacentHTML("beforeend",j([t]))).catch(t=>a.error({position:"topRight",message:`Sorry, we are have a problem...${t.message}`,displayMode:1}))}function j(e){return e.map(({id:t,todo:o,completed:s})=>`
  <li class='todoCard' data-id='${t}'>
  <input type='checkbox' class='todoCheckbox' ${s?"checked":""}/>
  <h2 class='todoTitle'>${o}</h2>
  <button class='todoBtnDel'>X</button>
  </li>`).join("")}b.addEventListener("submit",_);function _(e){e.preventDefault();const t=e.target.elements.todo.value;t.trim()&&fetch("https://dummyjson.com/todos/add",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({todo:t,completed:!1,userId:4})}).then(o=>o.json()).then(o=>{console.log(o),h.insertAdjacentHTML("beforeend",j([o]))}).catch(o=>a.error({position:"topRight",message:`Sorry...${o.message}`,displayMode:1})).finally(()=>e.target.reset())}h.addEventListener("click",q);async function q(e){if(!e.target.classList.contains("todoCheckbox")){console.log("ops it is not a checkbox!");return}e.preventDefault();const t=e.target.closest(".todoCard");console.log(t);const o=t.dataset.id;console.log(o),console.log(e.target.checked),fetch(`https://dummyjson.com/todos/${o}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({completed:e.target.checked,userId:o})}).then(s=>s.json()).then(s=>{console.log(s),e.target.checked=s.completed||!e.target.checked}).catch(s=>a.error({position:"topRight",message:`Sorry...${s.message}`,displayMode:1}))}h.addEventListener("click",x);function x(e){if(!e.target.classList.contains("todoBtnDel"))return;const t=e.target.closest(".todoCard"),o=t.dataset.id;t.remove(),fetch(`https://dummyjson.com/todos/${o}`,{method:"DELETE"}).then(s=>s.json()),then().catch(s=>a.error({position:"topRight",message:`Sorry...${s.message}`,displayMode:1}))}const U="eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhMWIxNTk0NzI5ZDlhODRlZjZkZTU2MmRiMjJiOTRkZSIsIm5iZiI6MTczNDUzMDE1Ny43ODIsInN1YiI6IjY3NjJkNDZkMTYxYWI3ZGVjNWZmZTgzMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.n11YprEyAIsNVgOqkidenCI4yQs_Y4WRKkJJKM74lkc",L=document.querySelector(".jsMovieList");document.querySelector(".jsLoadMore");const Z="/trending/movie/week",B={root:null,rootMargin:"300px",threshold:1},H=new IntersectionObserver(z,B),M=document.querySelector(".jsGuard");let m=1;async function $(e,t){const o={method:e,headers:{accept:"application/json",Authorization:`Bearer ${U}`}},s=new URLSearchParams({page:`${t}`});return(await fetch(`https://api.themoviedb.org/3${Z}?${s}`,o)).json()}$("GET",m).then(e=>{console.log(e),L.insertAdjacentHTML("beforeend",v(e.results)),e.page<e.total_pages&&H.observe(M)}).catch(e=>a.error({position:"topRight",message:`Sorry...${e.message}`,displayMode:1}));function v(e){return e.map(({poster_path:t,id:o,title:s,release_date:n,overview:r,vote_average:i})=>`<li class='movieCard' data-id='${o}'>
    <div class='posterContainer'>
<a href="#"><img class='moviePoster' src="https://image.tmdb.org/t/p/w300${t}" alt="${r}" ></a>
</div>
<div class="movieInfo">
  <h2>${s}</h2>
  <p>${r.slice(0,350)}</p>
<p>The vote average: ${i}</p>
<p>The release date: ${n}</p>
</div>
</li>`).join("")}async function z(e,t){e.forEach(o=>{o.intersectionRatio&&(m+=1,$("GET",m).then(s=>{L.insertAdjacentHTML("beforeend",v(s.results)),s.page>=s.total_pages&&t.unobserve(M);const r=document.querySelector(".movieCard").getBoundingClientRect().height;window.scrollBy({left:0,top:r*2,behavior:"smooth"})}).catch(s=>a.error({position:"topRight",message:`Sorry...${s.message}`,displayMode:1})))})}const W=document.querySelector(".btn-menu-open"),g=document.querySelector(".mob-menu");W.addEventListener("click",G);function G(e){g.classList.add("isVisibleMenu"),e.target.classList.contains(".item-nav")&&(console.log("mda"),g.classList.remove("isVisibleMenu"))}const V=document.querySelector(".mob-menu");V.addEventListener("click",Y);function Y(e){console.log(e.target),(e.target.classList.contains("link-nav")||e.target.classList.contains("use-icon-close"))&&g.classList.remove("isVisibleMenu")}
//# sourceMappingURL=index.js.map
